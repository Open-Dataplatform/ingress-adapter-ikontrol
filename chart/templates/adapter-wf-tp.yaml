apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: {{ .Values.appName }}-wf-tp
  namespace: argo
  labels:
    app: ingress-ikontrol
    component: adapter
spec:
  entrypoint: ingress
  templates:
  - name: ingress
    volumes:
      - name: adapter-cm
        configMap:
          name: {{ .Values.appName }}-cm
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "{{ .Values.appName }}-authentication-reader"
        vault.hashicorp.com/auth-path: "auth/kubernetes-{{ .Values.environment }}"
        vault.hashicorp.com/agent-inject-secret-credentials.ini: "{{ .Values.appName }}-authentication/data/credentials"
        vault.hashicorp.com/agent-inject-template-credentials.ini: |
          {{`{{-`}} with secret "{{ .Values.appName }}-authentication/data/credentials" {{`-}}`}}
              {{`[Authorization]
              tenant_id = {{ .Data.data.tenant_id }}
              client_id = {{ .Data.data.client_id }}
              client_secret = {{ .Data.data.secret }}
              [iKontrol Authorization]
              username = {{ .Data.data.username }}
              password = {{ .Data.data.password }}
              {{- end -}}`}}
    container:
      image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
      command: ["python", "-m", "ingress_adapter_ikontrol.adapter"]
      volumeMounts:
        - name: adapter-cm
          mountPath: "/etc/osiris/"
          readOnly: true